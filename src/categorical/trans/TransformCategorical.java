package categorical.trans;

import types.DataTypeM;
import types.DataTypeProperties;
import io.ReadCSV;
import io.WriteCSV;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;

/**
 * Transforms Categorical data into numerical data.
 * @author diego_paez
 */
public class TransformCategorical {

    /**
     * Transforms Categorical data into numerical data.
     * @param inFile File that contains categorical data
     * @param cRule Categorical Rule to transform data
     * @param dTypes Data Types for each of the columns in the file
     * @param suffix Ouput = file with same name as the file read + suffix
     * @throws IOException
     */
    public void transfCat(File inFile, TransformCategoricalRule cRule
            , ArrayList<DataTypeProperties> dTypes,String suffix) throws IOException{

        // read input file
        ReadCSV readCSV = new ReadCSV(inFile);

        // read headers of input file
        readCSV.readHeaders();

        // Create file with name = new file with suffix
        String firstKeepName = readCSV.getReadFileName() + suffix;
        File fileToWrite = WriteCSV.initializeWrite(inFile, firstKeepName);

        // create write file with headers as generated by categorical rule
        WriteCSV writeCSV = new WriteCSV(cRule.generateHeaders(readCSV.getColumnNames(), dTypes), fileToWrite);
        writeCSV.finishedHeaders();
        writeCSV.writeHeaders();
        ArrayList<String> fields;

        int k = 0;
        String[] rep;
        while (readCSV.next()) {
            // get current row fields
            fields = readCSV.getFields();

            // for each field if it is categorical transform it and write fields
            // if numeric only write it
            for(int i = 0; i < fields.size(); i++){
                if(dTypes.get(i).getType() == DataTypeM.CATEGORICAL){
                    // if field is null print error
                    if(fields.get(i) == null)
                        System.out.println("err");

                    // get replace numerical values for categorical value
                    rep = cRule.replace(fields.get(i));
                    for(String s: rep){
                        writeCSV.addField(s);
                    }
                } else{
                    writeCSV.addField(fields.get(i));
                }
            }
            writeCSV.flushLine();
            k++;
        }
        readCSV.close();
        writeCSV.close();
    }
}
